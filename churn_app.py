# -*- coding: utf-8 -*-
"""churn_app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DALNK_3zkIgmw7sD4skmzlNG5BQMMovR
"""

from flask import Flask, render_template, request
import pickle
from sklearn.preprocessing import StandardScaler, LabelEncoder

app = Flask(__name__)

# Load the trained model
model_loaded = pickle.load(open('churn_predi_model.pkl', 'rb'))

# Create a route to handle the index page
@app.route('/', methods=['GET', 'POST'])
def index():
    prediction = None

    if request.method == 'POST':
        age = float(request.form['Age'])
        gender = request.form['Gender']
        location = request.form['Location']
        subscription_length = int(request.form['Subscription_Length_Months'])
        monthly_bill = float(request.form['Monthly_Bill'])
        total_usage_gb = float(request.form['Total_Usage_GB'])

        # Preprocess the features for prediction
        label_encoder = LabelEncoder()
        gender_encoded = label_encoder.fit_transform([gender])[0]
        location_encoded = label_encoder.transform([location])[0]

        features = [
            age, gender_encoded, location_encoded, subscription_length,
            monthly_bill, total_usage_gb
        ]

        # Preprocess the features similar to how you did in the training code
        scaler = StandardScaler()
        scaled_features = scaler.transform([features])

        # Make prediction using the loaded model
        churn_prediction = model_loaded.predict(scaled_features)

        prediction = "Churn" if churn_prediction else "No Churn"

    return render_template('churn_index.html', prediction=prediction)

if __name__ == '__main__':
    app.run(debug=True)